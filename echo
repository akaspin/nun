__fn=function(context) {
context = context || {};
var hStream = new HStream();
var target = context;
var parent = hStream.root;
process.nextTick(function() {[
function() { raw(parent.map(), "Valid values for sections:\n\n"); },
   function() { section(section_section, parent.map(), target.def, target, function(chunk, target) { [
function() { raw(parent.map(), "    Defined\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.string, target, function(chunk, target) { [
function() { raw(parent.map(), "    String\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.notNull, target, function(chunk, target) { [
function() { raw(parent.map(), "    Not Null\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.nonZero, target, function(chunk, target) { [
function() { raw(parent.map(), "    Non Zero\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.notFalse, target, function(chunk, target) { [
function() { raw(parent.map(), "    Not False\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.array, target, function(chunk, target) { [
function() { raw(parent.map(), "    Array\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.obj, target, function(chunk, target) { [
function() { raw(parent.map(), "    Non-empty Object: "); },
function() { lookup(lookup_lookup, parent.map(), target.val, target); },
function() { raw(parent.map(), "\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\nInvalid values for sections:\n\n"); },
   function() { section(section_section, parent.map(), target.undef, target, function(chunk, target) { [
function() { raw(parent.map(), "    Undefined\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.emptyString, target, function(chunk, target) { [
function() { raw(parent.map(), "    Empty String\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.isNull, target, function(chunk, target) { [
function() { raw(parent.map(), "    Null\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.isZero, target, function(chunk, target) { [
function() { raw(parent.map(), "    Zero\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.isFalse, target, function(chunk, target) { [
function() { raw(parent.map(), "    False\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.emptyArray, target, function(chunk, target) { [
function() { raw(parent.map(), "    Empty Array\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n"); },
   function() { section(section_section, parent.map(), target.emptyObject, target, function(chunk, target) { [
function() { raw(parent.map(), "    Empty Object\n"); },
   ].forEach(function(__a){__a();})})},
function() { raw(parent.map(), "\n\n"); },
function() { parent.end(); }]
   .forEach(function(__a){ __a(); });
});
return hStream; }

